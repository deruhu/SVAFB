Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              ./Laderegler.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                              ./adc-routines.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./Laderegler.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./Laderegler.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o)
                              ./Laderegler.o (itoa)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o) (strrev)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./Laderegler.o
LOAD ./adc-routines.o
LOAD ./lcd-routines.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb5c
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_6
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_11
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e      0x678 ./Laderegler.o
                0x0000000000000182                Display
                0x00000000000002b0                __vector_9
                0x00000000000002e0                sol_pwr
                0x000000000000030a                PPT
                0x000000000000049a                main
                0x00000000000005d0                PPT_p
                0x0000000000000646                PPT_m
                0x00000000000006bc                TE_Schutz
                0x00000000000006d4                UL_Schutz
 .text          0x00000000000006d6       0x8e ./adc-routines.o
                0x00000000000006d6                ADC_Init
                0x00000000000006ec                ADC_enable
                0x00000000000006f0                ADC_disable
                0x00000000000006f4                ADC_Read
                0x000000000000070c                ADC_Read_Avg
 .text          0x0000000000000764      0x2f4 ./lcd-routines.o
                0x0000000000000764                lcd_init
                0x00000000000008b4                lcd_data
                0x00000000000008f2                lcd_command
                0x0000000000000930                lcd_clear
                0x000000000000096c                lcd_home
                0x00000000000009a8                lcd_setcursor
                0x0000000000000a0a                lcd_string
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x0000000000000a58        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000a58                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000a58       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000a58                __udivmodhi4
 .text.libgcc   0x0000000000000a80       0x36 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                0x0000000000000a80                __divmodsi4
 .text.libgcc   0x0000000000000ab6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000ab6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000ab6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000ab6       0x44 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000000ab6                __udivmodsi4
 .text.avr-libc
                0x0000000000000afa       0x3e /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o)
                0x0000000000000afa                itoa
 .text.avr-libc
                0x0000000000000b38       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000b38                strrev
                0x0000000000000b58                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x0000000000000b58                exit
                0x0000000000000b58                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b58        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b5c                _etext = .

.data           0x0000000000800060       0x12 load address 0x0000000000000b5c
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060       0x11 ./Laderegler.o
 .data          0x0000000000800071        0x0 ./adc-routines.o
 .data          0x0000000000800071        0x0 ./lcd-routines.o
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x0000000000800071        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800072                . = ALIGN (0x2)
 *fill*         0x0000000000800071        0x1 00
                0x0000000000800072                _edata = .
                0x0000000000800072                PROVIDE (__data_end, .)

.bss            0x0000000000800072        0x3
                0x0000000000800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800072        0x3 ./Laderegler.o
                0x0000000000800072                tCounter
                0x0000000000800073                GIAF
                0x0000000000800074                tCounterb
 .bss           0x0000000000800075        0x0 ./adc-routines.o
 .bss           0x0000000000800075        0x0 ./lcd-routines.o
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x0000000000800075        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800075                PROVIDE (__bss_end, .)
                0x0000000000000b5c                __data_load_start = LOADADDR (.data)
                0x0000000000000b6e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800075        0x0
                0x0000000000800075                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800075                PROVIDE (__noinit_end, .)
                0x0000000000800075                _end = .
                0x0000000000800075                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x29a0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc      0xf78 ./Laderegler.o
                                        0xf84 (size before relaxing)
 .stab          0x0000000000001644      0x36c ./adc-routines.o
                                        0x534 (size before relaxing)
 .stab          0x00000000000019b0      0xd68 ./lcd-routines.o
                                        0xf30 (size before relaxing)
 .stab          0x0000000000002718      0x1b0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x00000000000028c8       0xd8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000      0xcef
 *(.stabstr)
 .stabstr       0x0000000000000000      0xcef /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Laderegler.elf elf32-avr)
LOAD linker stubs
